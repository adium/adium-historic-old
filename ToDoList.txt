//-------------------------------------------------------------------------------------------------------
// Adium 0.8
//-------------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------------
// Possible Thoughts
//-------------------------------------------------------------------------------------------------------
//Status Menu
  Add a 'Status' menu between view and contact.  This menu would contain
	- Selectable user-defined states (Offline, available, at school, busy, afk, ...)
	- Account-specific connectivity & convenience (Moved from the file menu)
  These changes allow for removal of account and status related menu items
  from the file menu.

//Status Window
  The new state system should focus on ways for the user to
	- Quickly set a specific status (quick away, idle, dnd, available message, alias)
	- Define 'states' which apply status across services and alter adium behavior
  The new state system should be contained within its own window, continuing
  with the trend to move 'content' out of the preference window.

//Accounts Window
  Move account preferences to their own window
	- Accessed via an 'Accounts...' menu item in the Adium menu
	- Make all account related controls normal sized
	- Move user-icon and alias into the 'personal' tab
	- Dim service icon slightly on selection (Similar to contact list)
	- Use status icon to show online state instead of postfixing 'online/offline'

//Icon Packs
  Provide an interface for selection the active service and status icon packs
    - Menus items should show a preview of the most common icons
  These preferences will go on the general pane, since they apply throughout Adium  

//General Preferences
  Create a general preferences category for several existing preferences.  If
  more are added this pane could be split into General and Interface.
	- Message cycling and sending keys
	- Message logging (remove plain-text or send it to advanced)
	- Service and status icon pack selection
	- Message tab spawning preferences
  These changes allow for the removal of the 'Keys' preferences, and for
  message preferences to focus on message display over behavior.

//Alternate Event Interfaces
  Our event system interfaces (sound sets, dock behavior) need several usability
  improvements.
	- Custom behavior panels should be sheets
	- Allow changing of event within the table
	- Use standard +/- controls for adding and removing events (Not a popup)
	- Organize and group event menu, clarify and focus events

//Contact window toolbar
  Additional contact window toolbar items
	- Offline contacts toggle
	- Add group (Opens add group panel)
	- Add contact (Opens add contact panel)

//Message window toolbar
  Additional message window toolbar items
	- Open log viewer (to logs of active contact) 
	- Open font/color panel (standard system buttons)
	- Send file (opens file prompt)
	- User icon (Displays the contact's user icon)
	- Insert script (Popup, mirroring insert script in edit menu)

//Auto-completion
  Tab auto-completion in the message window
	- Contact names (Mainly for multi-user chat)
	- Bookmark URLs (From bookmark integration)

//Message Save and Print
  Common mac file menu operations should work on message windows, this includes
	- Save As
	- Print
  These are grouped because they are functionally similar.	

//File Receive Prompt
  The receive file prompt should be its own panel, and provide options for
	- Save (To desktop / download folder)
	- Save As... (Prompt for location)
	- Ignore
  This will solve issues with the save dialog catching keystrokes, and provides
  an easy way to just save an incoming file to the desktop.

//File Transfer window
  The file transfer window should be simple yet functional, displaying
	- Source/destination contact and direction
	- Transfer progress, speed
  Transfers should be cancelable, and stay in the window when finished.

//No games
  Remove tictactoe and the games framework.  These will be part of the adium-games
  package and have no place in the default distribution.

//Fast User Switching
  The fast user switching plugin needs to provide advanced preferences for
	- Enabling or disabling the feature
	- Changing the status message used when switched

//Drop 10.2 support
  Dropping 10.2 support would provide us with the following changes
	- Remove 10.2 message view code
	- Remove 10.2 specific log viewer
	- Remove all other 10.2 specific compatability code
	- Remove preference controller, delete all our glue code and use cocoa bindings
  The preference changes would be huge, and result in a huge reduction of code.

//Kill Plugins
  Refactoring is fun, refactoring is scary, refactoring could greatly simplify our code
	- Remove the menu controller, hook plugins directly to their menu items
	- Remove preference obfuscation, preferences in one nib, hooked directly to their code
	- Remove many unneeded plugin classes, interfaces, clutter
  Keeping the modular design, but ditching all the negative effects of it could be very beneficial
	

//-------------------------------------------------------------------------------------------------------
// Incomplete Thoughts
//-------------------------------------------------------------------------------------------------------
//Message Preferences
	- Clean up confusion with message display versus message sending
	- Clean up variant submenus and other message preference aspects

//Privacy Preferences
  Allow the user to easily block/unblock users by name, or users on their list.  Provide a way for them to see
  all blocked names and add/remove from the list.  Ignore the AIM specific block 'modes'.
	- Add block and unblock menu items which prompt for the service and name
	- Add block / unblock contextual menu items
	- Add "Block contacts not on my list" to AIM account preferences

//Announcer Improvements
	- Allow user to have more control over what is spoken by the announcer plugin

//Alerts
	- Display time stamps in the panel alert
	- Support %escapes in spoken alert (such as %n to speak the contact's name)

//Log viewer
	- Make contact drawer behave as additional filter to the search field
	- Make file menu save export the selected log

//Service-Specific
	- Add 'priority' support for jabber connections
	- Service specific functions (buddy search, password changing, etc)

//Contact List
	- Easy identification of mobile users
	- Option to not display groups

//Messages
	- Solution to handle display of tabs when too many are present

//Emoticons
	- Symlink in iChat emoticons

//Notifications
	- Growl Integration
	- Remove the existing bezel/notification code

//Documentation
	- User documentation

//Degerring of initial messages
	- Some system to not have messages pop up when received
