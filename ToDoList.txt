//-------------------------------------------------------------------------------------------------------
// Adium 0.8
//-------------------------------------------------------------------------------------------------------


//-------------------------------------------------------------------------------------------------------
// Possible Thoughts
//-------------------------------------------------------------------------------------------------------
//Status Menu
  Add a 'Status' menu between view and contact.  This menu would contain
	- Selectable user-defined states (Offline, available, at school, busy, afk, ...)
	- Account-specific connectivity & convenience (Moved from the file menu)
  These changes allow for removal of account and status related menu items
  from the file menu.

//Status Window
  The new state system should focus on ways for the user to
	- Quickly set a specific status (quick away, idle, dnd, available message, alias)
	- Define 'states' which apply status across services and alter adium behavior
  The new state system should be contained within its own window, continuing
  with the trend to move 'content' out of the preference window.

//Accounts Window
  Move account preferences to their own window
	- Accessed via an 'Accounts...' menu item in the Adium menu
	- Make all account related controls normal sized
	- Move user-icon and alias into the 'personal' tab
	- Dim service icon slightly on selection (Similar to contact list)
	- Use status icon to show online state instead of postfixing 'online/offline'

//Icon Packs
  Provide an interface for selection the active service and status icon packs
    - Menus items should show a preview of the most common icons
  These preferences will go on the general pane, since they apply throughout Adium  

//General Preferences
  Create a general preferences category for several existing preferences.  If
  more are added this pane could be split into General and Interface.
	- Message cycling and sending keys
	- Message logging (remove plain-text or send it to advanced)
	- Service and status icon pack selection
	- Message tab spawning preferences
  These changes allow for the removal of the 'Keys' preferences, and for
  message preferences to focus on message display over behavior.

//Alternate Event Interfaces
  Our event system interfaces (sound sets, dock behavior) need several usability
  improvements.
	- Custom behavior panels should be sheets
	- Allow changing of event within the table
	- Use standard +/- controls for adding and removing events (Not a popup)
	- Organize and group event menu, clarify and focus events

//Contact window toolbar
  Additional contact window toolbar items
	- Offline contacts toggle
	- Add group (Opens add group panel)
	- Add contact (Opens add contact panel)

//Message window toolbar
  Additional message window toolbar items
	- Open log viewer (to logs of active contact) 
	- Open font/color panel (standard system buttons)
	- Send file (opens file prompt)
	- User icon (Displays the contact's user icon)
	- Insert script (Popup, mirroring insert script in edit menu)

//Auto-completion
  Tab auto-completion in the message window
	- Contact names (Mainly for multi-user chat)
	- Bookmark URLs (From bookmark integration)

//Message Save and Print
  Common mac file menu operations should work on message windows, this includes
	- Save As
	- Print
  These are grouped because they are functionally similar.	

//File Receive Prompt
  The receive file prompt should be its own panel, and provide options for
	- Save (To desktop / download folder)
	- Save As... (Prompt for location)
	- Ignore
  This will solve issues with the save dialog catching keystrokes, and provides
  an easy way to just save an incoming file to the desktop.

//File Transfer window
  The file transfer window should be simple yet functional, displaying
	- Source/destination contact and direction
	- Transfer progress, speed
  Transfers should be cancelable, and stay in the window when finished.

//No games
  Remove tictactoe and the games framework.  These will be part of the adium-games
  package and have no place in the default distribution.

//Fast User Switching
  The fast user switching plugin needs to provide advanced preferences for
	- Enabling or disabling the feature
	- Changing the status message used when switched

//Kill Plugins
  Refactoring is fun, refactoring is scary, refactoring could greatly simplify our code
	- Remove the menu controller, hook plugins directly to their menu items
	- Remove preference obfuscation, preferences in one nib, hooked directly to their code
	- Remove many unneeded plugin classes, interfaces, clutter
  Keeping the modular design, but ditching all the negative effects of it could be very beneficial
	
//Message Tabs
  - Truncate tab names with ellipses instead of clipping
  - Enforce a larger minimum width for tabs
  - Use a chevron to display tabs that don't fit on the tab bar (like safari)
  - New close button graphic
	
//Sorting Improvements
  - Improve status sorting defaults
  - Simplify custom sort window by removing duplicate/redundant options
  - Move sort menu items out of their submenu (into the main view menu)
 
//Flashing reduction
  Make it possible to use Adium without any distracting flashing and blinking
  - Add option to remove flashing unviewed content on the contact list
  - Add option to prevent dock icon animations

//Formatted messages
  Some users like formatted and colored messages, other want messages to look
  the way they've decided in the preferences.  Let's make message formatting
  preferences follow this distinction
  - Preference "Send Formatted Messages", off by default.  When enabled, user
    can pick font, size, color of their messages.  This formatting is used
    when typing, displaying, and sending their message.
  - Preference "Display formatting of received messages", off by default.  When
    enabled, the font, size, and color of incoming messages will be displayed.
  By default we will completely ignore message formatting.  Users who want
  formatting will look for a way to set their font/color and find the options
  in general preferences.
  
//Plugin Version Control
  Simple solution to compatibility with 3rd party plugins
  - Every release of Adium has a plugin version number
  - When the interfaces change (only .x releases), this number will increment
  - Plugins have a version number in their info.plist
  - Adium will only load plugins if their plugin number matches Adium's
  This means that every major upgrade of Adium will require a new plugin download.
  Since releases are bigger and further apart, this will not be a major issue.

//Offline contacts
  Add group specific offline visibility toggles to the contact list.
  
//Deferring of initial messages
  In certain situations the user may not want new messages to automatically open
  windows.
  - Add an option to not open windows for incoming messages
  - Allow this option to be set/unset depending on our status (State system)
  - Display the number of new messages in the dock (Similar to mail)
  - Allow retrieval of these messages from the status/dock menu and contact list

//Growl notifications
  - Remove existing notification code
  - Add global preferences for which events to display
  - Add contact alerts for contact or group notifications

//Contact list editing
  We need contact list editing to feel safe
  - Improve drag images
  - Improve drop targeting, especially when dragging contacts with sorting on
  - Prevent list from flickering states when editing (contacts appearing to sign on, off, etc)
  - Improve reliability of moving, deleting, and adding contacts
  - Improve error handling with full lists
  - Improve error handling when adding contacts that already exist
  	
//Improved info window
  Update the info window appearance and profile display
  - Use a regular window instead of a panel
  - Improve link tracking and tooltips in profiles
  - Fix support for sub-profile links
  - Display profiles for other services in addition to AIM
  
//Preferences
  - Improve organization of advanced preferences
  - Add advanced categories for service specific preferences
  - Make heights of preference panes equal where possible
  - Fade between preference panes when switching

//Alerts
  - Display time stamps in the panel alert
  - Support %escapes in spoken alert (such as %n to speak the contact's name)

//Saving and Exporting
  - Allow 'save as' from within the log viewer to export logs
  - Allow 'save as' from a message window to export the current conversation

//First run
  - We need a more intuitive interface for a first-time user to get started with Adium.
    Possibilities are:
		- Simply a revamped Accounts window
		- A first-run Adium setup wizard [Evan: this is my inclination]
			* Basic account setup
			* Initial configuration of a few key preferences
  - The Migration Assistant, with expanded program support and a revamped UI, should 
    automatically offer its services when Adium is first launched, ‡ la Mail.app's
	importer.
  
//-------------------------------------------------------------------------------------------------------
// Incomplete Thoughts
//-------------------------------------------------------------------------------------------------------
//Message Preferences
	- Clean up variant submenus and other message preference aspects

//Privacy Preferences
  Allow the user to easily block/unblock users by name, or users on their list.  Provide a way for them to see
  all blocked names and add/remove from the list.  Ignore the AIM specific block 'modes'.
	- Add block and unblock menu items which prompt for the service and name
	- Add block / unblock contextual menu items
	- Add "Block contacts not on my list" to AIM account preferences

//Announcer Improvements
	- Allow user to have more control over what is spoken by the announcer plugin

//Log viewer
	- Make contact drawer behave as additional filter to the search field

//Service-Specific
	- Add 'priority' support for jabber connections
	- Service specific functions (buddy search, password changing, etc)

//Contact List
	- Easy identification of mobile users
	- Option to not display groups
	- Round label caps for events
	- Improve status heirachy 
	- We need to either support contacts at the root level or not suport them; we currently do a mixture
		which is very confusing to new users.  For example, a new Jabber account has no groups, but adding
		a contact with no groups has no visible effect.

//Alerts
  - Organize event and action menus
  - Clarify wording, clean up alert panes

//Status on message window
  - Show our current status on the message window

//Emoticons
	- Symlink in iChat emoticons

//Documentation
	- User documentation

//Message context improvements
  The message context system will not work well with deferred messages.
