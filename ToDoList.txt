//---------------------------------------------------------------------------------------------
// Adium 0.8 beta bugs
//---------------------------------------------------------------------------------------------
- List toolbar needs icon for toggle groups, add group, toggle offline contacts
- Move window shadow preference from layout to advanced
- Move opacity preference from layout to main pane or advanced
- Move maximum width slider from layout to main pane
- Status window when away preference is not implemented
- Implement 'edit menu' sheets for deleting list layouts and themes
- Improve behavior when customizing existing layouts and themes
- Improve behavior when canceling changes to layouts and themes
- Implement emoticon menu in appearance
- Implement emoticons customize sheet in appearance
- Add a warning sheet about window moving/performance for non-standard styles
- Contact menu is inconsistent with menu item naming, item grouping
- Update included layouts, themes, and message views
- Jabber account registration
- The crash reporter shouldn't force people to reopen Adium after a crash.
- Message views are ignoring variant specific info.plist keys
- %_statusmessage script is broken
- Status controller needs to return an offline state from activeState when we are offline
- installation of various xtras doesn't go to the right pref pane now.
- Should we be logging colors? (Evan: Yes?)
- Line breaks don't work properly with ICQ
- Get Info on a group after getting info on a contact shows the group's service as the last viewed contact's service, or nothing at all
- Double-clicking a contact with more than one message window open opens a new tab in the first opened window (instead of the frontmost)
- Group chat userlist is using contact list background colors
- Dragging a group chat's tab, then clicking a user in the userlist crashes
- Should we be logging colors?
- Setting the default download directory changes Safari's

//-------------------------------------------------------------------------------------------------------
// Old junk
//-------------------------------------------------------------------------------------------------------

[OTR]
- Fingerprint management? (advanced)

[Other]
- Crash on first launch of a new user: "Item to be inserted into menu already is in another menu"

//-------------------------------------------------------------------------------------------------------
// Possible Thoughts
//-------------------------------------------------------------------------------------------------------
//Auto-completion
  Tab auto-completion in the message window [Evan: How would one insert a tab with this implemented?]
	- Contact names (Mainly for multi-user chat)

//Kill Plugins
  Refactoring is fun, refactoring is scary, refactoring could greatly simplify our code
	- Remove the menu controller, hook plugins directly to their menu items
	- Remove preference obfuscation, preferences in one nib, hooked directly to their code
	- Remove many unneeded plugin classes, interfaces, clutter
  Keeping the modular design, but ditching all the negative effects of it could be very beneficial

//Message Tabs
  - Enforce a larger minimum width for tabs
  - Use a chevron to display tabs that don't fit on the tab bar (like safari)
  - New close button graphic

//Formatted messages
  Some users like formatted and colored messages, other want messages to look
  the way they've decided in the preferences.  Let's make message formatting
  preferences follow this distinction
  - Preference "Send Formatted Messages", off by default.  When enabled, user
    can pick font, size, color of their messages.  This formatting is used
    when typing, displaying, and sending their message.
  - Preference "Display formatting of received messages", off by default.  When
    enabled, the font, size, and color of incoming messages will be displayed.
  By default we will completely ignore message formatting.  Users who want
  formatting will look for a way to set their font/color and find the options
  in general preferences.

//Plugin Version Control
  Simple solution to compatibility with 3rd party plugins
  - Every release of Adium has a plugin version number
  - When the interfaces change (only .x releases), this number will increment
  - Plugins have a version number in their info.plist
  - Adium will only load plugins if their plugin number matches Adium's
  This means that every major upgrade of Adium will require a new plugin download.
  Since releases are bigger and further apart, this will not be a major issue.

//Offline contacts
  Add group specific offline visibility toggles to the contact list.

//Deferring of initial messages
  In certain situations the user may not want new messages to automatically open
  windows.
  - Add an option to not open windows for incoming messages
  - Allow this option to be set/unset depending on our status (State system)
  - Display the number of new messages in the dock (Similar to mail)
  - Allow retrieval of these messages from the status/dock menu and contact list

//Contact list editing
  We need contact list editing to feel safe
  - Improve drag images
  - Improve drop targeting, especially when dragging contacts with sorting on
  - Prevent list from flickering states when editing (contacts appearing to sign on, off, etc)
  - Improve reliability of moving, deleting, and adding contacts
  - Improve error handling with full lists
  - Improve error handling when adding contacts that already exist

//Improved info window
  Update the info window appearance and profile display
  - Fix support for sub-profile links [Evan: These work for me.  Confirmation, anyone?]
  - Use WebKit to handle the HTML unless there is some overwhelming reason we parse it
    // this should resolve several issues and gives great benefits - like tooltips & copy link

//Alerts
  - Display time stamps in the panel alert
  - Support %escapes in spoken alert (such as %n to speak the contact's name)

//Saving and Exporting
  - Allow 'save as' from a message window to export the current conversation
  - Allow 'save as' from within the log viewer to export logs

//Logging
  - Per account account logging preferences would allow users to choose which accounts are
    logged instead of the all-or-none approach we have now.
           - Add tab in all accounts with [x] Log chats
           - We can move the logging format pref. to this as well.
           - Other requirement would be a flag in the logging code to check account & pref.
  - Support printing from Log Viewer and its toolbar (add item)

//First run
  - We need a more intuitive interface for a first-time user to get started with Adium.
	- A first-run Adium setup wizard [Evan: this is my inclination]
		* Basic account setup
		* Initial configuration of a few key preferences
  - The Migration Assistant, with expanded program support and a revamped UI, should
    automatically offer its services when Adium is first launched, ‡ la Mail.app's
	importer.[Brandon: Working on it.]

// Address Book integration
    - Sync (optionally) contact notes to an associated AB card's Notes field
    - Ability to add a screenname into AB as a new card
    - Add People Picker & ability to add via this panel

//-------------------------------------------------------------------------------------------------------
// Incomplete Thoughts
//-------------------------------------------------------------------------------------------------------
//Message Preferences
	- Clean up variant submenus and other message preference aspects
        - Provide way to delete a message style from within Adium

//Privacy Preferences
  Allow the user to easily block/unblock users by name, or users on their list.  Provide a way for them to see
  all blocked names and add/remove from the list.  Ignore the AIM specific block 'modes'.
	- Add block and unblock menu items which prompt for the service and name
	- Add "Block contacts not on my list" to AIM account preferences

//Sound Preferences
	- Provide a way to manage (delete at minimum) soundsets

//Service-Specific
	- Add 'priority' support for jabber connections
	- Service specific functions (buddy search, password changing, etc)

//Contact List
	- Easy identification of mobile users
	- Round label caps for events
	- Improve status hierarchy
	- We need to either support contacts at the root level or not support them; we currently do a mixture
		which is very confusing to new users.  For example, a new Jabber account has no groups, but adding
		a contact with no groups has no visible effect.

//Status on message window
  - Show our current status on the message window

//Documentation
	- User documentation

//Message context improvements
	- The message context system will not work well with deferred messages.
