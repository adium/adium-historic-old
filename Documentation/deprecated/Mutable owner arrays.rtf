{\rtf1\mac\ansicpg10000\uc1 \deff4\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}
{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}
}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}
{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid \snext0 Normal;}{\s2\keepn\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\outlinelevel1\rin0\lin0\itap0 
\b\f5\fs28\cf13\lang1033\cgrid \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f18\fs28\lang1033\cgrid 
\sbasedon0 \snext15 Body Text;}}{\info{\author Adam Iser}{\operator Adam Iser}{\creatim\yr2002\mo12\dy20\hr12\min31}{\revtim\yr2002\mo12\dy20\hr23\min29}{\version3}{\edmins2}{\nofpages1}{\nofwords155}{\nofchars889}{\nofcharsws1091}{\vern16561}}
\paperw12226\paperh15826\margl1440 \ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1440\dghshow0\dgvshow0
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s2\keepn\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\outlinelevel1\rin0\lin0\itap0 \b\f5\fs28\cf13\lang1033\cgrid {
Adium Documentation : Mutable Owner Arrays
\par }\pard\plain \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f4\lang1033\cgrid {\f5\cf13 {\pict{\*\picprop\shplid1025{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}
{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 11184810}}{\sp{\sn fFilled}{\sv 1}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn alignHR}{\sv 1}}{\sp{\sn dxHeightHR}{\sv 30}}{\sp{\sn fStandardHR}{\sv 1}}{\sp{\sn fHorizRule}{\sv 1}}}
\picscalex898\picscaley6\piccropl0\piccropr0\piccropt0\piccropb0\picw50\pich25\picwgoal1000\pichgoal500\macpict\bliptag-942031874\blipupi72{\*\blipuid c7d9bbfe6f4cf0cb8fe71a3de7e9e836}000d00000000001900321101ff0000000000000000}}{\f5\fs22 
\par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 
\par Owner arrays (AIMutableOwnerArray) are similar to a regular array, except that each value in the array is associated with a specific owner.  The owners prevent conflict when values are removed and added.
\par 
\par }{\f5\cf13 AIMutableOwnerArray defines the following methods:
\par }{\f5 - (void)addObject:(id)anObject withOwner:(id)inOwner;
\par Adds an object to the array.  Pass the object to add, and the owner of the object (usually 'self')
\par 
\par - (void)removeObjectsWithOwner:(id)inOwner;
\par Removes all objects from the array with the specified owner.
\par 
\par - (id)objectWithOwner:(id)inOwner;
\par Returns the first object with a specified owner from the array.
\par 
\par 
\par }{\f5\cf13 AIMutableOwnerArray also provides several ways to sum/average it's contents:}{\f5   (Most of these are not functional at this time, and will just choose the first value).
\par 
\par - (BOOL)containsAnyIntegerValueOf:(int)inValue;
\par returns true if any of the values match inValue
\par 
\par - (NSColor *)averageColor;
\par returns an average of all colors in the array
\par 
\par - (int)greatestIntegerValue;
\par returns the greatest integer value in the array
\par 
\par }}