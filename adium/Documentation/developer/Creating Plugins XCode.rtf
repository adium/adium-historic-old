{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\froman\fcharset77 Times-Bold;\f1\froman\fcharset77 Times-Roman;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red128\green0\blue0;\red118\green15\blue80;\red104\green56\blue33;
}
\margl1440\vieww15740\viewh13140\viewkind1\viewscale128
\deftab720
\pard\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural

\f0\b\fs28 \cf2 Adium Documentation : Creating a plugin.\
\pard\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural

\f1\b0 \cf2 \
\pard\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural

\fs24 \cf2 \
\pard\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural
\cf0 Whenever possible, features should be added to Adium 2.0 as plugins.  Plugins not only allow great user customization, but help enforce object oriented design as well, keeping the Adium codebase clean and stable.\
\
While not all plugins will be distributed with the Adium application, they will be easier to keep track of and maintain if they\'d5re all built within the Adium project and stored on the Adium sourceforge cvs. \
\
There are quite a few steps involved in creating a plugin:\
\
\pard\pardeftab720\li360\ql\qnatural

\f0\b\fs22 \cf0 Create a new target in the Adium project\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - With the Adium project open, select \'d4New Target\'d5 from the Project menu.\
- Select \'d4Loadable Bundle\'d5 from the 'Cocoa' list\
- Enter your plugins name.\
- Ensure the 'Add to Project' drop down is on 'Adium XCode'\
- Click Finish\
\pard\pardeftab720\li360\ql\qnatural
\cf0 C
\f0\b hange the bundle\'d5s extension to \'d4AdiumPlugin\'d5\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - In the XCode side bar, under targets, select your plugin from the list\
- Ctrl+click, and then get info. Click on the builds tab. Then click on 'Common Settings' in the drawer. Locate 'Wrapper extension' in the 'Standard Build Settings' column, then add 'AdiumPlugin' to the 'Value' field that corresponds on the right.\
- Move to the 'Properties' tab in the get info inspector. Under the 'Principal Class' field, add 'AI<PluginName>Plugin'. You probably should replace AI with your initials.\
\pard\pardeftab720\li360\ql\qnatural

\f0\b \cf0 Make your target dependent on the necessary frameworks\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - Drop and drag 'Adium.framework' and 'AIUtilities.framework' to your targets 'Frameworks & Libraries' folder (this is also known as "linking frameworks"). You may also need to include 'Cocoa.framework'. The best way to include these is:\
	- Search for the framework you wish to include in the search field while 'Adium 			XCode' is selected.\
	- Scroll the sidebar list to your target, and expand it so that you see the 'Frameworks 		& Libraries' folder.\
	- Drop and drag the framework to the folder.\
\pard\pardeftab720\li360\ql\qnatural

\f0\b \cf0 Create a group for your plugin\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - In the files pane, create a new group (Group->New Group)\
- Name this group after your plugin, and place it in the 'Plugins' section. \
\pard\pardeftab720\li360\ql\qnatural

\f0\b \cf0 Create a plugin source file\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - Create a new \'d4Objective-C Class\'d5 (File->New File) with the class filename you used above (AI<PluginName>Plugin.m')\
- Click 'Choose...' and save your plugin in a new folder in the 'Plugins' directory.\
- Select your plugin\'d5s target and add this file.\
\pard\pardeftab720\li360\ql\qnatural

\f0\b \cf0 Build your plugin\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - With your plugin selected in the \'d4active target\'d5 popup (this is the drop down at the top left), click the build button.  It should build without errors.  If there are errors you need to resolve them.\
\pard\pardeftab720\li360\ql\qnatural

\f0\b \cf0 \
\
Add your plugin to the default Adium build\
\pard\pardeftab720\li1080\ql\qnatural

\f1\b0 \cf0 - Select the 'Adium' target target in the targets drop down on the side panel, then expand it.
\fs24 \

\fs22 - There are multiple 'Copy Files' directories within the targets. Select each until you find the one with plugins in it, and then drop and drag your plugin into the 'Copy files' plugins directory.
\fs24 \
\pard\pardeftab720\ql\qnatural
\cf0 \
I wish there was a way to simplify these steps.. if you know of one please let me know.\
\
The AI<Plugin Name>Class you create will serve as the main class and initializer of your plugin.  It should be a subclass of AIPlugin.\
\
\pard\pardeftab720\ql\qnatural

\f0\b \cf2 Sample AI<Plugin Name>Plugin.h\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\pardeftab720\li480\fi-480\ql\qnatural

\f1\b0\fs20 \cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\pardeftab720\li480\fi-480\ql\qnatural
\cf3 @interface\cf0  AI<PluginName>Plugin : AIPlugin \{\
\
\}\
\
\cf3 @end\cf0 \
\pard\pardeftab720\ql\qnatural

\fs24 \cf0 \
\pard\pardeftab720\ql\qnatural

\f0\b \cf2 Sample AI<Plugin Name>Plugin.m\
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\tx32640\tx33600\tx34560\tx35520\tx36480\tx37440\tx38400\tx39360\tx40320\tx41280\tx42240\tx43200\tx44160\tx45120\tx46080\tx47040\tx48000\tx48960\tx49920\tx50880\tx51840\tx52800\tx53760\tx54720\tx55680\tx56640\tx57600\tx58560\tx59520\tx60480\tx61440\tx62400\tx63360\tx64320\tx65280\tx66240\tx67200\tx68160\tx69120\tx70080\tx71040\tx72000\tx72960\tx73920\tx74880\tx75840\tx76800\tx77760\tx78720\tx79680\tx80640\tx81600\tx82560\tx83520\tx84480\tx85440\tx86400\tx87360\tx88320\tx89280\tx90240\tx91200\tx92160\tx93120\tx94080\tx95040\tx96000\ql\qnatural

\f2\b0\fs20 \cf4 \CocoaLigature0 \

\f1 #import "AI<PluginName>Plugin.h"\cf0 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\pardeftab720\li480\fi-480\ql\qnatural
\cf0 \CocoaLigature1 \
\pard\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\pardeftab720\li480\fi-480\ql\qnatural
\cf3 @implementation\cf0  AI<PluginName>Plugin\
\
- (\cf3 void\cf0 )installPlugin\
\{\
	NSLog(@\'d3Hello\'d3);\
\}\
\
\cf3 @end
\fs24 \cf0 \
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\ql\qnatural
\cf0 The install plugin method is called as your plugin loads.  This is where you want to use Adium\'d5s core controllers to perform your task, or register code to perform the task later.  Subclasses of AIPlugin automatically inherit the variable 'adium', which is a reference to the main AIAdium class.\
\
'adium' can be used to access all the Adium core controllers ( [adium menuController], [adium accountController], etc).\
\
From this point you\'d5re on your own and can do whatever you want using the core controllers.\
}