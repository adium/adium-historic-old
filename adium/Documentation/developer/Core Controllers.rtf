{\rtf1\mac\ansicpg10000\uc1 \deff0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f18\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Helvetica-Bold{\*\falt Times};}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f18\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Helvetica-Bold{\*\falt Times};}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\author Adam Iser}{\operator Adam Iser}{\creatim\yr2002\mo12\dy21\hr12\min28}{\revtim\yr2002\mo12\dy21\hr12\min30}{\version3}{\edmins2}{\nofpages5}{\nofwords908}{\nofchars5180}{\nofcharsws6361}{\vern16561}}\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dgmargin\dghspace120\dgvspace120\dghorigin1800\dgvorigin1440\dghshow0\dgvshow3\jcompress\viewkind1\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f4\lang1033\cgrid {\b\fs28\cf13 Adium Documentation : Overview\par }{\fs22\cf13 \par \par }{\b\fs22\cf13 AI Login Controller\par }{\fs22 Manages the Adium user list. (Hold down option while loading Adium)\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (NSString *)}{\b\fs22 userDirectory}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns the directory of the currently logged in user.  All user-specific preferences and data files should be stored at this location.  This method may return a relative path, such as "~/Library/Application Support/Adium/Users/Adam/"\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \par }{\b\fs22\cf13 AI Account Controller\par }{\fs22 Keeps track of the user's accounts.\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (NSNotificationCenter *)}{\b\fs22 accountNotificationCenter}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns the shared account controller notification center.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (NSArray *)}{\b\fs22 accountArray}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns an array of the user's accounts.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIAccount *)}{\b\fs22 newAccountAtIndex}{\fs22 :(int)index\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Create a new account at the specified index in the account array.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 deleteAccount}{\fs22 :(AIAccount *)inAccount\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Delete the specified account.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (int)}{\b\fs22 moveAccount}{\fs22 :(AIAccount *)account }{\b\fs22 toIndex}{\fs22 :(int)destIndex\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Move an account to another place in the account list. \par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIAccount *)}{\b\fs22 switchAccount}{\fs22 :(AIAccount *)inAccount }{\b\fs22 toService}{\fs22 :(id <AIServiceController>)inService;\par }\pard \li720\nowidctlpar\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Switch the specified account to a different service\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 passwordForAccount}{\fs22 :(AIAccount *)inAccount }{\b\fs22 notifyingTarget}{\fs22 :(id)inTarget }{\b\fs22 selector}{\fs22 :(SEL)inSelector;\par }\pard \li720\nowidctlpar\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Calls target & selector, passing the account's password.\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)}{\b\fs22 forgetPasswordForAccount}{\fs22 :(AIAccount *)inAccount;\par }\pard \li720\nowidctlpar\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Forgets a saved account password\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (NSArray *)}{\b\fs22 availableServiceArray}{\fs22 ;\par }\pard \li720\nowidctlpar\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns an array of available service controllers\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)}{\b\fs22 registerService}{\fs22 :(id <AIServiceController>)inService;\par }\pard \li720\nowidctlpar\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Register a service controller\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \par }{\b\fs22\cf13 AI Contact Controller\par }{\fs22 The contact controller keeps track of contacts and groups list. use the contact controller's methods to manage the contact list.\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (NSNotificationCenter *)}{\b\fs22 contactNotificationCenter}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns the shared contact controller notification center.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Ownership\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 addAccount}{\fs22 :(AIAccount<AIAccount_Handles> *)inAccount }{\b\fs22 toHandle}{\fs22 :(AIContactHandle *)inHandle\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Add an account as the owner of a contact handle\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 removeAccount}{\fs22 :(AIAccount<AIAccount_Handles> *)inAccount }{\b\fs22 fromHandle}{\fs22 :(AIContactHandle *)inHandle\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Remove an account as the other of a handle\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Handles\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIContactHandle *)}{\b\fs22 createHandleWithService}{\fs22 :(NSString *)inService }{\b\fs22 UID}{\fs22 :(NSString *)inUID }{\b\fs22 inGroup}{\fs22 :(AIContactGroup *)inGroup }{\b\fs22 forAccount}{\fs22 :(AIAccount *)inAccount\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Create a new handle in the specified group.  Creating, moving, or syncing as necessary.\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 deleteHandle}{\fs22 :(AIContactHandle *)inHandle\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Delete the specified handle.  Any owners are removed before deleting.\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 renameHandle}{\fs22 :(AIContactHandle *)inHandle }{\b\fs22 to}{\fs22 :(NSString *)newName;\par \tab Rename a handle\par \par - (void)}{\b\fs22 moveHandle}{\fs22 :(AIContactHandle *)inHandle }{\b\fs22 toGroup}{\fs22 :(AIContactGroup *)inGroup;\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Move a handle\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Groups\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIContactGroup *)}{\b\fs22 createGroupNamed}{\fs22 :(NSString *)inName }{\b\fs22 inGroup}{\fs22 :(AIContactGroup *)inGroup\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Create a group on the contact list within the specified group.\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 deleteGroup}{\fs22 :(AIContactGroup *)inGroup\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Delete an existing group\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 renameGroup}{\fs22 :(AIContactGroup *)inGroup }{\b\fs22 to}{\fs22 :(NSString *)newName\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Rename a group\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \nowidctlpar\tx-360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 Access\tab \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIContactGroup *)}{\b\fs22 contactList}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns the root contact list group.  This group contains every other group and contact on the list.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIContactGroup *)}{\b\fs22 groupWithName}{\fs22 :(NSString *)inName\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Find and return the group with the specified name\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (AIContactHandle *)}{\b\fs22 handleWithService}{\fs22 :(NSString *)inService }{\b\fs22 UID}{\fs22 :(NSString *)inUID\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Find and return the handle with the specified service and UID\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (NSMutableArray *)}{\b\fs22 allContactsInGroup}{\fs22 :(AIContactGroup *)inGroup }{\b\fs22 subgroups}{\fs22 :(BOOL)subGroups ownedBy:(AIAccount *)inAccount;\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Return all the contacts in a group, and (optionally) all the subgroups it contains, owned by the specified account (or all accounts if nil).\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Handle observers / status\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 handleStatusChanged}{\fs22 :(AIContactHandle *)inHandle }{\b\fs22 modifiedStatusKeys}{\fs22 :(NSArray *)InModifiedKeys\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Let everyone know a handles status has changed (call this method after making changes to a handle's status dict)\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 registerHandleObserver}{\fs22 :(id <AIHandleObserver>)inObserver\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Register a handle observer (see docs on handle observers...)\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Contact Info\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 showInfoForContact}{\fs22 :(AIContactHandle *)inContact\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Show the info window for the specified contact\par \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 addContactInfoView}{\fs22 :(AIContactInfoView *)inView\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Add a contact info view\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par Misc\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)}{\b\fs22 delayContactListUpdatesFor}{\fs22 :(int)seconds\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Delay updating of the contact list for a set period of time.  (Call this before making massive changes to the contact list) - Doesn't work yet.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \par }{\b\fs22\cf13 AI Interface Controller\par }{\fs22 Manages Adium's interface\par \par Public Methods:\par \tab - (NSNotificationCenter *)}{\b\fs22 interfaceNotificationCenter}{\fs22 ;\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Returns the shared interface controller notification center.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \tab \tab \par \tab - (void)}{\b\fs22 registerContactListView}{\fs22 :(id <AIContactListViewController>)inView\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Register a contact list view\par \par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \tab - (NSView *)}{\b\fs22 contactListView}{\fs22 \par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Return the currently active contact list view\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \tab - (void)}{\b\fs22 registerMessageView}{\fs22 :(id <AIMessageViewController>)inView\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Register a message view\par \par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \tab - (NSView *)}{\b\fs22 messageViewForHandle}{\fs22 :(AIContactHandle *)inHandle\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Return the currently active message view\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \par }{\b\fs22\cf13 AI Preference Controller\par }{\fs22 Assists with preferences.}{\b\fs22\cf13 \par }{\fs22\cf13 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (void)registerDefaults:(NSDictionary *)defaultDict forGroup:(NSString *)groupName\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Register a set of default values\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)addPreferenceView:(AIPreferenceView *)inView\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Add a custom preference veiw\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (IBAction)showPreferenceWindow:(id)sender\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Open the preferences window\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)openPreferencesToView:(AIPreferenceViewController *)inView;\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Open the preference window to a specific preference view.\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 - (id)preferenceForKey:(NSString *)inKey group:(NSString *)groupName object:(AIContactObject *)object;\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Return a preference value relative to the passed object.\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)setPreference:(id)value forKey:(NSString *)inKey group:(NSString *)groupName object:(AIContactObject *)object;\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Set a preference value relative to the passed object\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (NSDictionary *)preferencesForGroup:(NSString *)groupName;\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Return a non-relative preference group.\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par - (void)setPreference:(id)value forKey:(NSString *)inKey group:(NSString *)groupName;\par }\pard \li720\nowidctlpar\tx-480\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Set a non-relative preference\par }\pard \li360\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin360\itap0 {\fs22 \par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \par }{\b\fs22\cf13 AI Menu Controller\par }{\fs22 Allows access to Adium's menubar.}{\b\fs22\cf13 \par }{\fs22 \par \tab - (void)}{\b\fs22 addMenuItem}{\fs22 :(NSMenuItem *)newItem }{\b\fs22 toLocation}{\fs22 :(MENU_LOCATION)location\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Add a menu item\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par \tab - (void)}{\b\fs22 removeMenuItem}{\fs22 :(NSMenuItem *)targetItem;\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Remove a menu item\par }\pard \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 {\fs22 \par }{\b\fs22\cf13 AI Sound Controller\par }{\fs22 Assists with playing sounds}{\b\fs22\cf13 \par \par }{\fs22 \tab + (void)}{\b\fs22 playSoundNamed}{\fs22 :(NSString *)inName\par }\pard \li720\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin720\itap0 {\fs22 Play a sound\par }\pard \nowidctlpar\faauto\rin0\lin0\itap0 {\fs22 \par }}