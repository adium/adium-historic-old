{\rtf1\mac\ansicpg10000\uc1 \deff4\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f18\fs28\lang1033\cgrid \sbasedon0 \snext15 Body Text;}}{\info{\author Adam Iser}{\operator Adam Iser}{\creatim\yr2002\mo12\dy20\hr15\min19}{\revtim\yr2002\mo12\dy20\hr23\min19}{\version16}{\edmins32}{\nofpages2}{\nofwords318}{\nofchars1815}{\nofcharsws2228}{\vern16561}}\paperw12226\paperh15826\margl1440 \ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1440\dghshow0\dgvshow0\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f4\lang1033\cgrid {\b\f5\fs28\cf13 Adium Documentation : Contact object display\par }{\f5\cf13 {\pict{\*\picprop\shplid1029{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 11184810}}{\sp{\sn fFilled}{\sv 1}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn alignHR}{\sv 1}}{\sp{\sn dxHeightHR}{\sv 30}}{\sp{\sn fStandardHR}{\sv 1}}{\sp{\sn fHorizRule}{\sv 1}}}\picscalex898\picscaley6\piccropl0\piccropr0\piccropt0\piccropb0\picw50\pich25\picwgoal1000\pichgoal500\macpict\bliptag-1356909861\blipupi72{\*\blipuid af1f32dbce17587aed00ad48fb1f61f3}000d00000000001900321101ff00000000}}{\f5\fs28\cf13 \par }\pard\plain \s15\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f18\fs28\lang1033\cgrid {\f5\fs24\cf13 \par }\pard\plain \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid {\f5 The display attributes of a contactObject allow multiple pieces of code to work together and determine the best way for displaying contactObjects.\par \par Attributes are stored by key within the individual contact objects. \par \par Since many seperate pieces of code will apply attributes of the same type to the same contact object, attributes are stored in owner arrays, one for each key.  See the owner array documentation for more information on how they work.\par \par \par }{\b\f5\cf13 Properly displaying contact objects\par }{\f5 The base for displaying all contact objects is the display Name.  A contactObject's method:\par - (NSString *)displayName;\par returns the most appropriate form of it's name for user viewing.\par \par Starting with this name as a base, display code can enhance it using the contact object's attributes.  Each attribute is stored in an owner array, and identifier by a key.  While many attributes may appear in the future, the current ones are:\par \par "Hidden" (NSNumber) \par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 YES if the object should not be displayed.  Otherwise NO.\par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 \par "Text Color" (NSColor)\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 The color of the object's display name string.\par \par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 "Left View" (id <AIHandleLeftView>)\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 A view to display left of the object's display name string.\par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 \par \par The attribute array for a particular key is retrieved using AIContactObject's:\par - (AIMutableOwnerArray *)displayArrayForKey:(NSString *)inKey;\par \par The owner array can then be averaged/summed (see the owner array docs for more info), and used to alter the display of the object.\par \par \par }{\b\f5\cf13 Altering the display of contact objects\par }{\f5 By adding and removing values in the atribute arrays, any code can modify the appearance of contact objects throughout Adium. \par \par The following code marks 'handle' to display with red text:\par \par AIMutableOwnerArray\tab *colorArray;\par \par colorArray = [handle displayArrayForKey:@"Text Color"];\par [colorArray removeObjectsWithOwner:self];\par [colorArray addObject:[NSColor redColor] withOwner:self];\par \par \par Notice that the code first removes any existing objects from the array before adding a new one.  It is advised to only have one object (owned by you) in an array at a time.\par \par After modifying the display attributes, a ObjectChanged notification must be broadcast to let others know they should update.  Pass the modified handle as the notification object.\par \par [[owner contactNotificationCenter] postNotificationName:Contact_ObjectChanged object:handle];\par \par \par \par \par }}