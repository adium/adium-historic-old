{\rtf1\mac\ansicpg10000\uc1 \deff4\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f2\fnil\fcharset256\fprq2{\*\panose 00020703090202050204}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f14\fnil\fcharset2\fprq2{\*\panose 00050201020108040807}Wingdings;}{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Times};}{\f2\fnil\fcharset256\fprq2{\*\panose 00020703090202050204}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00020005000000000000}Helvetica;}{\f14\fnil\fcharset2\fprq2{\*\panose 00050201020108040807}Wingdings;}{\f18\froman\fcharset77\fprq0{\*\panose 00000000000000000000}Times-Bold{\*\falt Times};}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid \snext0 Normal;}{\s1\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f4\lang1033\cgrid \sbasedon0 \snext0 heading 1;}{\s2\keepn\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\outlinelevel1\rin0\lin0\itap0 \b\f5\fs28\cf13\lang1033\cgrid \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f18\fs28\lang1033\cgrid \sbasedon0 \snext15 Body Text;}}{\*\listtable{\list\listtemplateid275532200{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 _;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \loch\af3\dbch\af0\hich\f3 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4320\jclisttab\tx4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 _;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \loch\af3\dbch\af0\hich\f3 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6480\jclisttab\tx6480 }{\listname ;}\listid852303883}{\list\listtemplateid179338886{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'01-;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li720\jclisttab\tx720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li1440\jclisttab\tx1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li2160\jclisttab\tx2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 _;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \loch\af3\dbch\af0\hich\f3 \fi-360\li2880\jclisttab\tx2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li3600\jclisttab\tx3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li4320\jclisttab\tx4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 _;}{\levelnumbers;}\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \loch\af3\dbch\af0\hich\f3 \fi-360\li5040\jclisttab\tx5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01o;}{\levelnumbers;}\f2\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li5760\jclisttab\tx5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3929 _;}{\levelnumbers;}\f14\chbrdr\brdrnone\brdrcf1 \chshdng0\chcfpat1\chcbpat1\fbias0 \fi-360\li6480\jclisttab\tx6480 }{\listname ;}\listid1652252579}}{\*\listoverridetable{\listoverride\listid1652252579\listoverridecount0\ls1}{\listoverride\listid852303883\listoverridecount0\ls2}}{\info{\title Adium Documentation : Working with accounts}{\author Adam Iser}{\operator Adam Iser}{\creatim\yr2002\mo12\dy20\min51}{\revtim\yr2002\mo12\dy21\hr9\min51}{\version45}{\edmins130}{\nofpages3}{\nofwords731}{\nofchars4168}{\nofcharsws5118}{\vern16561}}\paperw12226\paperh15826\margl1440 \ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1440\dghshow0\dgvshow0\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s2\keepn\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\outlinelevel1\rin0\lin0\itap0 \b\f5\fs28\cf13\lang1033\cgrid {Adium Documentation : The contact list\par }\pard\plain \nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f4\lang1033\cgrid {\f5\cf13 {\pict{\*\picprop\shplid1025{\sp{\sn shapeType}{\sv 1}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 11184810}}{\sp{\sn fFilled}{\sv 1}}{\sp{\sn fLine}{\sv 0}}{\sp{\sn alignHR}{\sv 1}}{\sp{\sn dxHeightHR}{\sv 30}}{\sp{\sn fStandardHR}{\sv 1}}{\sp{\sn fHorizRule}{\sv 1}}}\picscalex898\picscaley6\piccropl0\piccropr0\piccropt0\piccropb0\picw50\pich25\picwgoal1000\pichgoal500\macpict\bliptag1690437355\blipupi72{\*\blipuid 64c206eb46a1b9a7c5f173889670de0b}000d00000000001900321101ff00000000000000000000}}{\f5\fs28\cf13 \par }\pard\plain \s15\nowidctlpar\tx360\tx720\tx1080\tx1440\tx3060\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\faauto\rin0\lin0\itap0 \f18\fs28\lang1033\cgrid {\f5\fs24\cf13 \par }\pard\plain \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f4\lang1033\cgrid {\f5 Adium's contact list is made up of AIContactObjects, or more specifically, subclasses of AIContactObject.  AIContactGroup and AIContactHandle make up the majority of the contact list.\par \par The contact list is a delicate, complicated structure.  Care should be taken to only modify the list using AIContactController's methods. \par \par }{\b\f5\cf13 Ownership\par }{\f5 Adium's master contact list is stored locally.  As accounts connect, they sync their lists with the Adium master list.  While every object is on the master list, only a selection of them may be on the contact list of a given account.  When an object is on the contact list of an account, it is said to be owned by that account.\par \par A single object may be owned by more than one account, and a single account may (and most likey will) own more than one object.\par \par The ownership of objects can be changed using contactController's methods:\par - (void)addAccount:(AIAccount<AIAccount_Handles> *)inAccount toObject:(AIContactObject *)inObject;\par - (void)removeAccount:(AIAccount<AIAccount_Handles> *)inAccount fromObject:(AIContactObject *)inObject;\par \par The presence of an object on an account can be tested with AIContactObject's:\par - (BOOL)belongsToAccount:(AIAccount *)inAccount;\par \par \par }{\b\f5\cf13 Groups\par }{\f5 AIContactGroups are contactObjects that store other contact objects.  This means that groups can be placed within groups.  The contact list itself is a group (the root group), containing handles and groups, which may contain additional handles and groups, and so on.  There is no hard cap on nested groups.\par \par The containing group of any contactObject can be retrieved using:\par - (AIContactGroup *)containingGroup;\par \par Groups can be created, deleted, and renamed using contactController's methods:\par - (AIContactGroup *)createGroupNamed:(NSString *)inName inGroup:(AIContactGroup *)inGroup;\par - (void)deleteGroup:(AIContactGroup *)inGroup;\par - (void)renameGroup:(AIContactGroup *)inGroup to:(NSString *)newName;\par \par The current name of a group is retrieved using AIContactGroup's displayName method.\par \par \par }{\b\f5\cf13 Handles\par }{\f5 AIContacthandles are contactObjects that represent an individual user.  They can be managed using the methods:\par - (void)deleteHandle:(AIContactHandle *)inHandle;\par - (void)renameHandle:(AIContactHandle *)inHandle to:(NSString *)newName;\par - (void)moveHandle:(AIContactHandle *)inHandle toGroup:(AIContactGroup *)inGroup;\par \par To move / manage contacts at the root of the contact list, use nil as the group.\par \par To explicitly create a handle, use the method:\par - (AIContactHandle *)createHandleWithService:(AIServiceType *)inService UID:(NSString *)inUID inGroup:(AIContactGroup *)inGroup forAccount:(AIAccount *)inAccount;\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 \par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 This requires an AIServiceType (returned by a service controller's 'handleServiceType' method - A list of installed service controllers is available from account controller's availableServiceArray method).  It also requires the desired UID and group, and the account this handle should initially be owned by.\par \par If the handle does not exist on the contact list: it will be created.\par If the handle }{\i\f5 does}{\f5  exist on the list, in the same group: nothing will happen.\par If the handle }{\i\f5 does}{\f5  exist on the list, in a different group: an 'out of sync' condition will occur and the user will be prompted for the desired handle location.\par \par In all cases:\par - an AIContactHandle is returned (either the existing one, or a new one).\par - inAccount will be added as an owner for the handle\par \par Contact handles also provide access to their service type and UID:\par - (AIServiceType *)service;\par - (NSString *)UID;\par \par \par }{\b\f5\cf13 Accessing & Searching\par }{\f5 If you need it, the root contact list group can be retrieved using contactController's method:\par - (AIContactGroup *)contactList;\par \par \par When searching for a group, use:\par - (AIContactGroup *)groupWithName:(NSString *)inName;\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 This method will search the contact list for a group with the passed name.  The placement of the group is not important.  Nil is returned is the group does not exist.\par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 \par \par - (AIContactHandle *)handleWithService:(AIServiceType *)inService UID:(NSString *)inUID forAccount:(AIAccount *)inAccount;\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 This method will search the contact list for a handle with the passed name and service type.  The placement of the handle is not important.\par If the handle does not exist, it will be created in the strangers group, set as owned by the passed account, and returned.\par \par The implementation details of the strangers group are not important.  All that you need to know is this method always returns the requested contact, even if it doesn't exist on the user's contact list.\par }\pard \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f5 \par \par - (NSMutableArray *)allContactsInGroup:(AIContactGroup *)inGroup subgroups:(BOOL)subGroups ownedBy:(AIAccount *)inAccount;\par }\pard \li360\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin360\itap0 {\f5 This method is useful when building a list of available contacts. It will return an array of all the contacts within the specified group.\par \par inGroup - the group to search in (nil for the contact list root)\par subgroups - if yes, subgroups will be searched as well\par inAccount - if an account is passed, only contacts owned by that account are returned.\par }\pard \li480\nowidctlpar\tx960\tx1920\tx2880\tx3840\tx4800\tx5760\tx6720\tx7680\tx8640\tx9600\tx10560\tx11520\tx12480\tx13440\tx14400\tx15360\tx16320\tx17280\tx18240\tx19200\tx20160\tx21120\tx22080\tx23040\tx24000\tx24960\tx25920\tx26880\tx27840\tx28800\tx29760\tx30720\tx31680\faauto\rin0\lin480\itap0 {\f5 \par }}