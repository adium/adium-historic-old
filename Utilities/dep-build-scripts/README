To set up the build environment (fetch the source trees):
python download.py `cat urls.txt`

Also get a copy of the pidgin sources:
http://developer.pidgin.im/wiki/UsingPidginMonotone

When you set up your pidgin working copy, set the environment variable
PIDGIN_SOURCE to be the path to your WC. current_step.sh needs this to work.
In bash/zsh: export PIDGIN_SOURCE="/path/to/im.pidgin.pidgin"
In csh/tcsh: setenv PIDGIN_SOURCE "/path/to/im.pidgin.pidgin"
 * Note that PIDGIN_SOURCE should be an absolute path. Don't use ~.
 * This Pidgin checkout must be completely clean. If you use it for building Pidgin (or libpurple, or Finch), be sure to run "make distclean" in it before starting the process below.

Then, once you have the source trees, the current build process is this:
    ./dep_make.sh
    ./purple_make.sh
# this next step will die soon, it's here because of the churn on the procedure
# for building libpurple
    ./current_step.sh
    ./universalize.sh

the next step only needs to be done after a clean build or after updating to a new version of libpurple; it generates and copies in the po (localization) files

    ./make_po_files.sh

which will leave you with frameworks in build/Frameworks.

You can then copy the frameworks to Adium itself with:
    ./copy_frameworks.sh
